# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- main

pool:
  vmImage: 'macos-latest'

steps:
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
    
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.apk'
    apksignerKeystoreFile: 'release_demo'
    apksignerKeystorePassword: '123456'
    apksignerKeystoreAlias: 'release_demo'
    apksignerKeyPassword: '123456'
    apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/apk/release/demo_app.release.apk
    zipalign: true
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/app/build/outputs/apk/release/'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory)
    contents: '**/*.release.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
    overWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/release/'
    artifactName: 'apks'
    publishLocation: 'container'